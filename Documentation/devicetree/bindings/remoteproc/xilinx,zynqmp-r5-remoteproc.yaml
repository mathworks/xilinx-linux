# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/remoteproc/xilinx,zynqmp-r5-remoteproc.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Xilinx R5 remote processor controller

description:
  This document defines the binding for the remoteproc component that loads and
  boots firmwares on the Xilinx Zynqmp and Versal family chipsets.

  Note that the Linux has global addressing view of the R5-related memory (TCM)
  so the absolute address ranges are provided in TCM reg's.

maintainers:
  - Ben Levinsky <ben.levinsky@amd.com>

properties:
  $nodename:
    pattern: "^r5[f|2]ss(@.*)?"

  compatible:
    enum:
      - xlnx,zynqmp-r5-remoteproc
      - xlnx,versal-r5-remoteproc
      - xlnx,versal-net-r52-remoteproc

  reg:
    items:
      - description: Address and Size of Xilinx RPU Configuration register

  "#address-cells":
    const: 2

  "#size-cells":
    const: 2

  ranges: true

# Optional properties:
# --------------------
  xlnx,cluster-mode:
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [0, 1]
    description: |
      Configuration Mode for the Dual R5F cores within the R5F cluster.
      Should be either a value of 0 (LockStep mode) or 1 (Split mode),
      default is LockStep mode if omitted.

# R5F Processor Child Nodes:
# ==========================

patternProperties:
  "^r5[f|2]_[a-f0-9]+$":
    type: object
    description: |
      The R5F Sub-System device node should define one or two R5F child nodes,
      each node representing a Xilinx instantiation of the Arm Cortex R5F core.
      There should be one or two child nodes if the R5F is in Split mode and
      one child node if the R5F is in Lockstep mode.

      In Split mode each R5F core has two associated TCM Banks. R5_0 has
      TCM Banks 0A and 0B and R5_1 has TCM Banks 1A and 1B.

      In Lockstep mode only one R5F child node should be defined. This one
      child has access to TCM Banks 0A, 0B, 1A and 1B and any of the four can
      be included in the child R5F's sram property.

      This also supports arm-cortexr52 clusters on Versal-net platform with
      the same runtime modes.

      The example below shows Split mode with two child nodes.

    properties:
      compatible:
        enum:
          - xilinx,r5f
          - xilinx,r52

# The following properties are mandatory for R5F Core0 in both LockStep and Split
# modes, and are mandatory for R5F Core1 _only_ in Split mode.

      memory-region:
        description: |
          Phandles to the memory nodes to be associated with the
          The reserved memory nodes should be carveout nodes, and
          should be defined with a "no-map" property as per the bindings in
          Documentation/devicetree/bindings/reserved-memory/reserved-memory.txt
        minItems: 1
        maxItems: 6
        items:
          - description: Region used for dynamic DMA allocations like vrings and
                         vring buffers
          - description: region reserved for firmware image sections
        additionalItems: true

      power-domain:
        $ref: /schemas/types.yaml#/definitions/uint32
        description: |
          Power node ID that is used to uniquely identify the RPU for Xilinx
          Power Management.

# Optional properties:
# --------------------
# The following properties are optional properties for each of the R5F cores:

      mboxes:
        description: |
          Standard property to specify a mailbox
          This property is required only if the rpmsg/virtio functionality
          is used

           Refer to the zynqmp-ipi-mailbox documentation for client usage of this
           property
        maxItems: 1

      mbox-names:
        description: |
          Refer to the zynqmp-ipi-mailbox documentation for client usage of this
          property
        items:
          - const: tx
          - const: rx

      sram:
        $ref: /schemas/types.yaml#/definitions/phandle-array
        minItems: 1
        maxItems: 4
        items:
          maxItems: 1
        description: |
          Phandles to one or more reserved on-chip SRAM regions. The regions
          should be defined as child nodes of the respective SRAM node, and
          should be defined as per the generic bindings in,
          Documentation/devicetree/bindings/sram/sram.yaml

      xlnx,rsc-tbl:
        $ref: /schemas/types.yaml#/definitions/phandle-array
        items:
          - items:
              - description: Phandle of carveout
              - description: The location of the resource table. It is expected
                             that the address is within the carveout. If not, then
                             the resource table physical address will not be stored
                             and attach will not work.
        description: |
          Reference to the carveout that has the resource table. The second
          argument is the address within the carveout where the resource table
          is located.

    required:
      - compatible
      - power-domain

    unevaluatedProperties: false

required:
  - reg
  - compatible
  - "#address-cells"
  - "#size-cells"
  - ranges

allOf:
  - if:
      properties:
        compatible:
          enum:
            - xilinx,r5f
    then:
      required:
        - sram

additionalProperties: false

examples:
  - |
    / {
        compatible = "xlnx,zynqmp-zcu102-rev1.0", "xlnx,zynqmp-zcu102", "xlnx,zynqmp";
        #address-cells = <2>;
        #size-cells = <2>;
        model = "ZynqMP ZCU102 ";

        r5fss@ff9a0000 {
          compatible = "xlnx,zynqmp-r5-remoteproc";
          #address-cells = <2>;
          #size-cells = <2>;
          ranges;
          reg = <0x0 0xff9a0000 0x0 0x10000>;
          xlnx,cluster-mode = <0>;

          r5f_0 {
               compatible = "xilinx,r5f";
               memory-region = <&elf_load0>,
                               <&rpu0vdev0vring0>,
                               <&rpu0vdev0vring1>,
                               <&rpu0vdev0buffer>;
               sram = <&tcm_0a>, <&tcm_0b>;
               power-domain = <0x7>;
               xlnx,rsc-tbl  = <&rproc_0_reserved 0x3ed20000>;
          };
          r5f_1 {
               compatible = "xilinx,r5f";
               memory-region = <&elf_load1>,
                               <&rpu1vdev0vring0>,
                               <&rpu1vdev0vring1>,
                               <&rpu1vdev0buffer>;
               sram = <&tcm_1a>, <&tcm_1b>;
               power-domain = <0x8>;
          };

        };
    };

...
